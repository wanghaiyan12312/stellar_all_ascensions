namespace = ascensions

country_event = {
	id = ascensions.1
	title = ascensions.1.title
	desc = {
		exclusive_trigger = { num_tradition_categories < @max_tradition_trees }
		text = ascensions.1.desc
	}
	desc = {
		exclusive_trigger = { num_tradition_categories >= @max_tradition_trees }
		text = ascensions.1.desc.manytrads
	}

	picture = GFX_evt_genetic_modification
	show_sound = event_alien_nature
	is_triggered_only = yes

	trigger = { has_biogenesis_dlc = yes }

	option = {
		trigger = { NOT = { has_tradition = tr_purity_adopt } }
		name = bio.20.a
		set_country_flag = purity_tradition_unlocked
		add_tradition = tr_purity_adopt # Purity Tree
	}

	option = {
		trigger = { NOT = { has_tradition = tr_cloning_adopt } }
		name = bio.20.b
		set_country_flag = cloning_tradition_unlocked
		add_tradition = tr_cloning_adopt # Cloning Tree 
	}

	option = {
		trigger = { NOT = { has_tradition = tr_mutation_adopt } }
		name = bio.20.c
		set_country_flag = mutation_tradition_unlocked
		add_tradition = tr_mutation_adopt # Mutation Tree
	}
	
}
#Fix leaders - add psionic, cyborg and erudite to leaders if you have them
country_event = { 
	id = ascensions.2
	title = ascensions.2.title
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		every_owned_leader = {
			limit = {
				species = { has_trait = trait_cybernetic }
				NOR = {
					has_trait = leader_trait_cyborg
					has_trait = leader_trait_curator
				}
			}
			add_trait = leader_trait_cyborg
		}
		every_owned_leader = {
			limit = {
				species = { has_trait = trait_erudite }
				NOR = {
					has_trait = leader_trait_erudite
					has_trait = leader_trait_curator
				}
			}
			add_trait = leader_trait_erudite
		}
		every_owned_leader = {
			limit = {
				OR = {
					species = { has_trait = trait_psionic }
					# catcher because the psionic ascension does not go thorugh and modify leader species.
					AND = {
						species = { 
							is_same_species = root 
							NOT = { has_trait = trait_mechanical }
						}
						root = {
							has_tradition = tr_psionics_psionic_assimilation
						}
					}
				}
				NOT = {
					has_trait =	leader_trait_psionic
				}
			}
			add_trait = leader_trait_psionic
		}
	}
}